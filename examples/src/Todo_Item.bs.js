// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("Todo_Item");

function make(todo, onDestroy, onUpdate, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var send = param[/* send */3];
              var state = param[/* state */1];
              var match = state[/* isEdit */0];
              return React.createElement("li", undefined, React.createElement("p", {
                              onDoubleClick: (function (_event) {
                                  return Curry._1(send, /* ToggleEdit */0);
                                })
                            }, todo[/* title */1]), match ? React.createElement("input", {
                                type: "text",
                                value: state[/* inputEditValue */1],
                                onKeyDown: (function ($$event) {
                                    var match = $$event.which;
                                    if (match !== 13) {
                                      console.log("oh shit");
                                      return /* () */0;
                                    } else {
                                      return Curry._1(onUpdate, state[/* inputEditValue */1]);
                                    }
                                  }),
                                onChange: (function ($$event) {
                                    return Curry._1(send, /* OnChangeVal */[$$event.target.value]);
                                  })
                              }) : null, React.createElement("button", {
                              onClick: onDestroy
                            }, "hapus"));
            }),
          /* initialState */(function (param) {
              return /* record */[
                      /* isEdit */false,
                      /* inputEditValue */todo[/* title */1]
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (action) {
                return /* Update */Block.__(0, [/* record */[
                            /* isEdit */state[/* isEdit */0],
                            /* inputEditValue */action[0]
                          ]]);
              } else {
                return /* Update */Block.__(0, [/* record */[
                            /* isEdit */!state[/* isEdit */0],
                            /* inputEditValue */state[/* inputEditValue */1]
                          ]]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
