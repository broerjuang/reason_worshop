// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("Todo_Item");

function make(todo, onDestroy, onUpdate, onToggle, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var send = param[/* send */3];
              var state = param[/* state */1];
              var match = state[/* isEdit */0];
              return React.createElement("li", undefined, React.createElement("input", {
                              checked: todo[/* checked */2],
                              type: "checkbox",
                              onChange: onToggle
                            }), React.createElement("p", {
                              onDoubleClick: (function (_event) {
                                  return Curry._1(send, /* ToggleEdit */0);
                                })
                            }, todo[/* title */1]), match ? React.createElement("input", {
                                type: "text",
                                value: state[/* inputEditValue */1],
                                onKeyDown: (function ($$event) {
                                    return Curry._1(send, /* OnKeyDown */Block.__(1, [$$event.which]));
                                  }),
                                onBlur: (function (_event) {
                                    return Curry._1(send, /* OnSaveVal */1);
                                  }),
                                onChange: (function ($$event) {
                                    return Curry._1(send, /* OnChangeVal */Block.__(0, [$$event.target.value]));
                                  })
                              }) : null, React.createElement("button", {
                              onClick: onDestroy
                            }, "hapus"));
            }),
          /* initialState */(function (param) {
              return /* record */[
                      /* isEdit */false,
                      /* inputEditValue */todo[/* title */1]
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (typeof action === "number") {
                if (action === 0) {
                  return /* Update */Block.__(0, [/* record */[
                              /* isEdit */!state[/* isEdit */0],
                              /* inputEditValue */state[/* inputEditValue */1]
                            ]]);
                } else {
                  return /* SideEffects */Block.__(1, [(function (self) {
                                Curry._1(self[/* send */3], /* ToggleEdit */0);
                                return Curry._1(onUpdate, state[/* inputEditValue */1]);
                              })]);
                }
              } else if (action.tag) {
                var num = action[0];
                if (num !== 13) {
                  if (num !== 27) {
                    return /* NoUpdate */0;
                  } else {
                    return /* Update */Block.__(0, [/* record */[
                                /* isEdit */false,
                                /* inputEditValue */state[/* inputEditValue */1]
                              ]]);
                  }
                } else {
                  return /* SideEffects */Block.__(1, [(function (param) {
                                return Curry._1(param[/* send */3], /* OnSaveVal */1);
                              })]);
                }
              } else {
                return /* Update */Block.__(0, [/* record */[
                            /* isEdit */state[/* isEdit */0],
                            /* inputEditValue */action[0]
                          ]]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
